trigger:
- master

stages:

- stage: initial_build
  displayName: Initial Build
  dependsOn: []
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      displayName: Build Solution
      inputs:
        command: 'build'
        packagesToPack: 'NetRegexCompiler.sln'
        arguments: '--configuration Release'

- stage: parity_tests
  displayName: Parity Tests
  dependsOn: [initial_build]
  jobs:
    - job:
    displayName: Parity Tests (None)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" None'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline IgnorePatternWhitespace'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline IgnorePatternWhitespace CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'

        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" Multiline ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
  - job:
    displayName: Parity Tests (IgnoreCase, Multiline, ExplicitCapture, Singleline, IgnorePatternWhitespace, RightToLeft, CultureInvariant)
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      lfs: true
      submodules: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests/NetRegexCompiler.GenerateTests.csproj'
        arguments: '--configuration Release "$(System.DefaultWorkingDirectory)/NetRegexCompiler.Tests.TestRegexes/regexes" IgnoreCase Multiline ExplicitCapture Singleline IgnorePatternWhitespace RightToLeft CultureInvariant'
        workingDirectory: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.GenerateTests'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(System.DefaultWorkingDirectory)/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes/NetRegexCompiler.NetRegexCompiler.Tests.TestRegexes.csproj'
        arguments: '--configuration Release'
